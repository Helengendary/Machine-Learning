epochs = 100
batch_size = 200
patience = 15
learning_rate = 0.001
model_path = '/kaggle/input/rice-image-dataset/Rice_Image_Dataset'

model = models.Sequential([
    layers.Resizing(90, 90),
    layers.Rescaling(1.0/255),
    layers.RandomRotation((-0.2, 0.2)),
    layers.Conv2D(32, (3,3), # 32 @ 88 x 88
        activation = 'relu',
        kernel_initializer = initializers.RandomNormal()
    ),
    layers.MaxPooling2D((2,2)), # 32 @ 44 x 44
    layers.Conv2D(64, (2,2), # 2048 @ 43 x 43
        activation  = 'relu',
        kernel_initializer = initializers.RandomNormal()
    ),  
    layers.MaxPooling2D((3,3)), # 2048 @ 15 x 15
    layers.Conv2D(16, (4,4), # 32768 @ 12 x 12
        activation  = 'relu',
        kernel_initializer = initializers.RandomNormal()
    ), 
    layers.MaxPooling2D((2,2)), # 32768 @ 6 x 6
    layers.Flatten(),
    layers.Dropout(0.2),
    layers.Dense(128,
        activation = 'relu',
        kernel_initializer = initializers.RandomNormal()
    ),
    layers.Dense(64,
        activation = 'relu',
        kernel_initializer = initializers.RandomNormal()
    ),
    layers.Dense(64,
         activation = 'relu',
         kernel_initializer = initializers.RandomNormal()
    ),
    layers.Dense(5,
         activation = 'sigmoid',
         kernel_initializer = initializers.RandomNormal()
    )
])




model.compile(
    optimizer = optimizers.Adam(
        learning_rate = learning_rate
    ),
    loss = losses.SparseCategoricalCrossentropy(),
    metrics = [ metrics.SparseCategoricalAccuracy() ]
)






